{
  "compilerOptions": {
    //    "types": ["vite/client"],
    // "module": "esnext",
    //使用 import.meta.dev需要配置下面两排
    "target": "esnext",
    "module": "esnext",
    "moduleResolution": "Node",
    //允许 TS编译器在将代码编译为较旧版本的 JavaScript 时，正确地处理ES2015及以上版本中引入的迭代协议。
    "downlevelIteration": true,
    //用于支持 CommonJS 模块的按需导入
    "esModuleInterop": true,
    //严格模式
    "strict": true,
    //是否允许隐式的 any 类型
    "noImplicitAny": true,
    //非空检查
    "strictNullChecks": true,
    //函数类型检查
    "strictFunctionTypes": true,
    //属性初始化检查
    "strictPropertyInitialization": true,
    //未使用变量检查
    "noUnusedLocals": true,
    //未使用参数检查
    "noUnusedParameters": true,
    //编译器查找 type definition 文件的根路径列表
    "typeRoots": ["node_modules/@types", "@/types"],
    //允许默认导入CommonJS模块
    "baseUrl": "./",
    // 这里需要配置
    "paths": {
      "@/*": ["./src/*"]
      // 这里需要配置
    }
    // 如果baseUrl设置为'src',那paths就应该配置为{"@/*": "./*"},如下：
    // "baseUrl": "src",
    // "paths": {
    //  "@/*": ["./*"]
    // }
  },
  "include": ["src/**/*.ts", "src/types/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue", "env.d.ts", "auto-imports.d.ts"],
  "exclude": ["node_modules"],
  // "files": [],
  "references": [
    // {
    //   "path": "./tsconfig.node.json"
    // },
    // {
    //   "path": "./tsconfig.app.json"
    // }
  ]
}
